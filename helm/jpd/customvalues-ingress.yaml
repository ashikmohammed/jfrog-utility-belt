global:
  # certificates added to this secret will be copied to $JFROG_HOME/<product>/var/etc/security/keys/trusted directory
  customCertificates:
    enabled: true
    certificateSecretName: jpd-tls                 

artifactory:
  enabled: true
  nginx:
    enabled: false
  ingress:
    enabled: true
    hosts:
      - jpd.jfrog.pro
    annotations: 
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_pass_header   Server;
        proxy_set_header    X-JFrog-Override-Base-Url https://jpd.jfrog.pro;
      kubernetes.io/tls-acme: "true"
    tls:
    - secretName: jpd-tls 
      hosts:
        - jpd.jfrog.pro
    # Additional ingress rules
    # additionalRules: []

  artifactory:
    # Note: For HA deployments, set replicaCount >1 (recommended 3)
    replicaCount: 1
    license:
      secret: artifactory-cluster-license
      dataKey: art.lic
    service:
      type: ClusterIP
    replicator:
      enabled: true
      ingress:
        annotations: 
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding on;

          kubernetes.io/tls-acme: "true"
        tls:
        - secretName: jpd-tls 
          hosts:
          - jpd.jfrog.pro

      ## When replicator is enabled and want to use tracker feature, trackerIngress.enabled flag should be set to true
      ## Please refer - https://www.jfrog.com/confluence/display/JFROG/JFrog+Peer-to-Peer+%28P2P%29+Downloads
      trackerIngress:
        enabled: false
        # hosts: []
        # annotations:
        # kubernetes.io/ingress.class: nginx
        # nginx.ingress.kubernetes.io/proxy-buffering: "off"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   chunked_transfer_encoding on;
        # tls: []
        #  Secrets must be manually created in the namespace.
        # - hosts:
        #   - artifactory.domain.example
        #   secretName: chart-example-tls-secret

  # access:
    ## Enable TLS by changing the tls entry (under the security section) in the access.config.yaml file.
    ## ref: https://www.jfrog.com/confluence/display/JFROG/Managing+TLS+Certificates#ManagingTLSCertificates
    ## When security.tls is set to true, JFrog Access will act as the Certificate Authority (CA) and sign the TLS certificates used by all the different JFrog Platform nodes.
    ## This ensures that the node to node communication is done over TLS.
    # accessConfig:
    #   security:
    #     tls: true
    # customCertificatesSecretName: jpd-tls
    # resetAccessCAKeys: true

xray:
  enabled: true
  router:
    tlsEnabled: false
insight:
  enabled: true
  router:
    tlsEnabled: false
distribution:
  enabled: true
  initContainerImage: releases-docker.jfrog.io/jfrog/ubi-minimal:8.5-204
  router:
    tlsEnabled: false
  # distribution: 
  #   preStartCommand: "mkdir -p {{ .Values.distribution.persistence.mountPath }}/etc/security/keys/trusted && cp -fv /tmp/ca.crt {{ .Values.distribution.persistence.mountPath }}/etc/security/keys/trusted/ca.crt"
  # common:
  #   customVolumeMounts:

pipelines:
  enabled: true
  router:
    tlsEnabled: true
redis:
  enabled: true 
rabbitmq:
  enabled: true

# xray:
#   enabled: false
# insight:
#   enabled: false
# distribution:
#   enabled: false
# pipelines:
#   enabled: false
# redis:
#   enabled: false
# rabbitmq:
#   enabled: false
